<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:jaxrs-client="http://cxf.apache.org/jaxrs-client"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
		http://cxf.apache.org/jaxrs-client http://cxf.apache.org/schemas/jaxrs-client.xsd">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>META-INF/config.${spring.profiles.active}.properties</value>
            </list>
        </property>
    </bean>

	<context:annotation-config/>
	<context:property-placeholder/>
	<context:component-scan base-package="cat.prv.services,cat.prv.om.dao" />
	
	
    <!-- This produces a container-managed EntityManagerFactory; 
         rather than application-managed EntityManagerFactory as in case of LocalEntityManagerFactoryBean-->
    <bean id="entityManagerFactoryBean" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <!-- This makes /META-INF/persistence.xml is no longer necessary -->
      <property name="packagesToScan" value="cat.prv.om.entity" />
      <!-- JpaVendorAdapter implementation for Hibernate EntityManager.
           Exposes Hibernate's persistence provider and EntityManager extension interface -->
      <property name="jpaVendorAdapter">
         <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
      </property>
      <property name="jpaProperties">
         <props>
            <prop key="hibernate.hbm2ddl.auto">validate</prop>
            <prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
         </props>
      </property>
   </bean>
   
  
	
	 <!-- This transaction manager is appropriate for applications that use a single JPA EntityManagerFactory for transactional data access. 
        JTA (usually through JtaTransactionManager) is necessary for accessing multiple transactional resources within the same transaction. -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
      <property name="entityManagerFactory" ref="entityManagerFactoryBean" />
   </bean>
    
   <!-- responsible for registering the necessary Spring components that power annotation-driven transaction management; 
        such as when @Transactional methods are invoked -->
   <tx:annotation-driven transaction-manager="transactionManager"  />
   
   
   <import resource="datasource-${spring.profiles.active}.xml"/>
   <import resource="rabbit.xml"/>
   <import resource="hlrClient.xml"/>
    
    
    <!--Trace Inbound/Outbound-->
    <bean id="logInbound" class="org.apache.cxf.interceptor.LoggingInInterceptor"/>
    <bean id="logOutbound" class="org.apache.cxf.interceptor.LoggingOutInterceptor"/>
     
    
	<jaxrs-client:client id="subscribersResource"
                         address="${c1rtgw.url}"
                         serviceClass="cat.rtc.gw.rs.api.SubscribersResource"
                         username="${c1rtgw.username}" password="${c1rtgw.password}"
                         threadSafe="true"
                         inheritHeaders="true">
        <jaxrs-client:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider">
            	<property name="mapper" ref="objectMapper"/>
            </bean>
        </jaxrs-client:providers>
        <jaxrs-client:inInterceptors>
            <ref bean="logInbound"/>
        </jaxrs-client:inInterceptors>
        <jaxrs-client:inFaultInterceptors>
            <ref bean="logInbound"/>
        </jaxrs-client:inFaultInterceptors>  
        <jaxrs-client:outInterceptors>
            <ref bean="logOutbound"/>
        </jaxrs-client:outInterceptors>
        <jaxrs-client:outFaultInterceptors>
            <ref bean="logOutbound"/>
        </jaxrs-client:outFaultInterceptors>
    </jaxrs-client:client>
</beans>
